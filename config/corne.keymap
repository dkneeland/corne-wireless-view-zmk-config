/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV     1
#define MOUSE   2
#define MEDIA   3
#define NUM     4
#define SYM     5
#define FUNC    6

/ {
    combos {
        compatible = "zmk,combos";
        combo_spc1 {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&mo MEDIA>;
        };
        combo_spc2 {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&mo FUNC>;
        };
    };
};

/ {
		keymap {
				compatible = "zmk,keymap";

		default_layer {
				// ---------------------------------------------------------------------------------------------------------
				// | Q      | W      | F       | P       | B      || J        | L       | U       | Y      | '      |
				// | LGUI A | LALT R | LCTRL S | LSHFT T | G      || M        | LSHFT N | LCTRL E | LALT I | LGUI O |
				// | Z      | RALT X | C       | D       | V      || K        | H       | ,       | RALT . | /      |
				// |        |        | L3 Esc  | L1 Spc  | L2 Tab || L5 Enter | L4 BSPC | L6 DEL  |        |        |
            label = "Base";
			bindings = <
				&none  &kp Q       &kp W       &kp F        &kp P        &kp B         &kp J         &kp L        &kp U        &kp Y   &kp APOS    &none
				&none  &kp A       &kp R       &kp S        &kp T        &kp G         &kp M         &kp N        &kp E        &kp I   &kp O       &none
				&none  &kp Z       &kp X       &kp C        &kp D        &kp V         &kp K         &kp H        &kp COMMA    &kp DOT &kp FSLH    &none
				                               &kp ESC     &lt NAV SPACE &lt MOUSE TAB &lt SYM ENTER &lt NUM BSPC &kp DEL
				>;
		};
		nav {
				// --------------------------------------------------------------------------------------
				// |      |      |       |       |   || Redo   | Paste | Copy    | Cut   | Undo  |
				// | LGUI | LALT | LCTRL | LSHFT |   || Caps   | Left  | Down    | Up    | Right |
				// |      | RALT |       |       |   || Insert | Home  | Pg Down | Pg Up | End   |
				// |      |      |       |       |   || Enter  | BSPC  | DEL     |       |       |
            label = "Navigate";
			bindings = <
				&none  &none     &none     &none      &none      &none    &kp LC(Y)  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &none
				&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp CAPS   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
				&none  &none     &kp RALT  &none      &none      &none    &kp INS    &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &none
				                           &none      &trans     &none    &kp ENTER  &kp BSPC   &kp DEL
			>;
		};
		mouse {
				// -----------------------------------------------------------------------------------------
				// |      |      |       |       |   ||       |      |             |           |    |
				// | LGUI | LALT | LCTRL | LSHFT |   || XX    | XX   | XX          | XX        | XX |
				// |      | RALT |       |       |   || XX    | XX   | Scroll Down | Scroll Up | XX |
				// |      |      |       |       |   || Enter | BSPC | DEL         |           |    |
            label = "Mouse";
			bindings = <
				&none  &none     &none     &none      &none      &none     &none      &none     &none              &none            &none  &none
				&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &none      &none     &none              &none            &none  &none
				&none  &none     &kp RALT  &none      &none      &none     &none      &none     &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &none  &none
				                           &none      &none      &trans    &kp ENTER  &kp BSPC  &kp DEL
			>;
		};
		media {
				// ---------------------------------------------------------------------------
				// |       |      |       |       |   ||      |      |      |      |        |
				// | LGUI  | LALT | LCTRL | LSHFT |   ||      | Prev | Vol- | Vol+ | Next   |
				// |       | RALT |       |       |   || BT 0 | PT 1 | BT 2 | BT 3 | BT CLR |
				// |       |      |       |       |   || Stop | Play | Mute |      |        |
            label = "Media";
			bindings = <
				&none  &none     &none     &none      &none      &none    &none         &none             &none         &none         &none       &none
				&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none         &kp K_PREV        &kp K_VOL_DN  &kp K_VOL_UP  &kp K_NEXT  &none
				&none  &none     &kp RALT  &none      &none      &none    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &none
				                           &trans     &none      &none    &kp K_STOP2   &kp K_PLAY_PAUSE  &kp K_MUTE
			>;
		};

		number {
				// --------------------------------------------------------------
				// | [ | 7 | 8 | 9 | ] ||  |         |       |      |      |
				// | ; | 4 | 5 | 6 | = ||  | LSHFT M | LCTRL | LALT | LGUI |
				// | ` | 1 | 2 | 3 | \ ||  |         |       | RALT |      |
				// |   |   | . | 0 | - ||  |         |       |      |      |
            label = "Numpad";
			bindings = <
				&none  &kp LBKT   &kp NUM_7  &kp NUM_8  &kp NUM_9   &kp RBKT      &none  &none      &none      &none     &none     &none
				&none  &kp SEMI   &kp NUM_4  &kp NUM_5  &kp NUM_6   &kp EQUAL     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
				&none  &kp GRAVE  &kp NUM_1  &kp NUM_2  &kp NUM_3   &kp BSLH      &none  &none      &none      &kp RALT  &none     &none
				                                        &kp DOT     &kp NUM_0   &kp MINUS    &none  &trans     &none
			>;
		};

		symbol {
				// ------------------------------------------------------------
				// | { | & | * | ( | } ||  |       |       |      |      |
				// | : | $ | % | ^ | + ||  | LSHFT | LCTRL | LALT | LGUI |
				// | ~ | ! | @ | # | | ||  |       |       | RALT |      |
				// |   |   | ( | ) | _ ||  |       |       |      |      |
            label = "Symbol";
			bindings = <
				&none  &kp LBRC    &kp AMPS   &kp ASTRK  &kp LPAR   &kp RBRC     &none   &none      &none      &none     &none     &none
				&none  &kp COLON   &kp DLLR   &kp PRCNT  &kp CARET  &kp PLUS     &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
				&none  &kp TILDE   &kp EXCL   &kp AT     &kp HASH   &kp PIPE     &none   &none      &none      &kp RALT  &none     &none
				                              &kp LPAR   &kp RPAR   &kp UNDER    &trans  &none      &none
			>;
		};

		function {
				// ------------------------------------------------------------------------------
				// | F12 | F7 | F8   | F9    | Prnt Scrn ||  |       |       |      |      |
				// | F11 | F4 | F5   | F6    | Scrl Lck  ||  | LSHFT | LCTRL | LALT | LGUI |
				// | F10 | F1 | F2   | F3    | Pause     ||  |       |       | RALT |      |
				// |     |    | Menu | Space | Tab       ||  |       |       |      |      |
            label = "Function";
			bindings = <
				&none  &kp F12  &kp F7  &kp F8       &kp F9     &kp PSCRN          &none  &none      &none      &none     &none     &none
				&none  &kp F11  &kp F4  &kp F5       &kp F6     &kp SLCK           &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
				&none  &kp F10  &kp F1  &kp F2       &kp F3     &kp PAUSE_BREAK    &none  &none      &none      &kp RALT  &none     &none
				                        &kp K_CMENU  &kp SPACE  &kp TAB            &none  &none      &trans
			>;
		};

	};
};
