/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV     1
#define MOUSE   2
#define MEDIA   3
#define NUM     4
#define SYM     5
#define FUNC    6
#define RMOD    7
#define LMOD    8

/ {
    combos {
        compatible = "zmk,combos";
        combo_media {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&mo MEDIA>;
        };
        combo_function {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&mo FUNC>;
        };
    };
};

/ {
    behaviors {
        hrm: tap-unless-interrupted {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
        };
    };

		keymap {
				compatible = "zmk,keymap";

		default_layer {
				// ---------------------------------------------------------------------------------------------------------
				// | Q      | W      | F       | P       | B      || J        | L       | U       | Y      | '      |
				// | LGUI A | LALT R | LCTRL S | LSHFT T | G      || M        | LSHFT N | LCTRL E | LALT I | LGUI O |
				// | Z      | RALT X | C       | D       | V      || K        | H       | ,       | RALT . | /      |
				// |        |        | L3 Esc  | L1 Spc  | L2 Tab || L5 Enter | L4 BSPC | L6 DEL  |        |        |
			label = "Base";
			bindings = <
				&none  &kp Q       &kp W       &kp F         &kp P         &kp B         &kp J         &kp L        &kp U        &kp Y       &kp APOS    &none
				&none  &hrm LGUI A &hrm LALT R &hrm LCTRL S  &hrm LSHFT T  &kp G         &kp M         &hrm RSHFT N &hrm LCTRL E &hrm LALT I &hrm LGUI O &none
				&none  &kp Z       &kp X       &kp C         &kp D         &kp V         &kp K         &kp H        &kp COMMA    &kp DOT     &kp FSLH    &none
				                               &lt LMOD ESC  &lt NAV SPACE &lt MOUSE TAB &lt SYM ENTER &lt NUM BSPC &lt RMOD DEL
				>;
		};
		nav {
				// --------------------------------------------------------------------------------------
				// |      |      |       |       |   || Redo   | Paste | Copy    | Cut   | Undo  |
				// |      |      |       |       |   || Caps   | Left  | Down    | Up    | Right |
				// |      |      |       |       |   || Insert | Home  | Pg Down | Pg Up | End   |
				// |      |      |       |       |   || Enter  | BSPC  | DEL     |       |       |
			label = "Navigate";
			bindings = <
				&trans    &trans    &trans    &trans    &trans    &trans    &kp LC(Y)   &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &trans
				&trans    &trans    &trans    &trans    &trans    &trans    &caps_word  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
				&trans    &trans    &trans    &trans    &trans    &trans    &kp INS     &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
				                              &trans    &trans    &trans    &kp ENTER   &kp BSPC   &kp DEL
			>;
		};
		mouse {
				// -----------------------------------------------------------------------------------------
				// |      |      |       |       |   ||       |      |             |           |    |
				// |      |      |       |       |   || XX    | XX   | XX          | XX        | XX |
				// |      |      |       |       |   || XX    | XX   | Scroll Down | Scroll Up | XX |
				// |      |      |       |       |   || Enter | BSPC | DEL         |           |    |
			label = "Mouse";
			bindings = <
				&trans   &trans    &trans    &trans    &trans    &trans     &trans      &trans     &trans             &trans           &trans  &trans
				&trans   &trans    &trans    &trans    &trans    &trans     &trans      &trans     &trans             &trans           &trans  &trans
				&trans   &trans    &trans    &trans    &trans    &trans     &trans      &trans     &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &trans  &trans
				                             &trans    &trans    &trans     &kp ENTER   &kp BSPC   &kp DEL
			>;
		};
		media {
				// ---------------------------------------------------------------------------
				// |       |      |       |       |   ||      |      |      |      |        |
				// |       |      |       |       |   ||      | Prev | Vol- | Vol+ | Next   |
				// |       |      |       |       |   || BT 0 | PT 1 | BT 2 | BT 3 | BT CLR |
				// |       |      |       |       |   || Stop | Play | Mute |      |        |
			label = "Media";
			bindings = <
				&trans    &trans    &trans    &trans    &trans    &trans    &trans         &trans            &trans        &trans        &trans      &trans
				&trans    &trans    &trans    &trans    &trans    &trans    &trans         &kp K_PREV        &kp K_VOL_DN  &kp K_VOL_UP  &kp K_NEXT  &trans
				&trans    &trans    &trans    &trans    &trans    &trans    &bt BT_SEL 0   &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &trans
				                              &trans    &trans    &trans    &kp K_STOP2    &kp K_PLAY_PAUSE  &kp K_MUTE
			>;
		};
		number {
				// --------------------------------------------------------------
				// | [ | 7 | 8 | 9 | ] ||  |         |       |      |      |
				// | ; | 4 | 5 | 6 | = ||  |         |       |      |      |
				// | ` | 1 | 2 | 3 | \ ||  |         |       |      |      |
				// |   |   | . | 0 | - ||  |         |       |      |      |
			label = "Numpad";
			bindings = <
				&trans  &kp LBKT   &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp RBKT    &trans    &trans    &trans    &trans    &trans    &trans
				&trans  &kp SEMI   &kp NUM_4  &kp NUM_5  &kp NUM_6  &kp EQUAL   &trans    &trans    &trans    &trans    &trans    &trans
				&trans  &kp GRAVE  &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp BSLH    &trans    &trans    &trans    &trans    &trans    &trans
				                              &kp DOT    &kp NUM_0  &kp MINUS   &trans    &trans    &trans
			>;
		};
		symbol {
				// ------------------------------------------------------------
				// | { | & | * | ( | } ||  |       |       |      |      |
				// | : | $ | % | ^ | + ||  |       |       |      |      |
				// | ~ | ! | @ | # | | ||  |       |       |      |      |
				// |   |   | ( | ) | _ ||  |       |       |      |      |
			label = "Symbol";
			bindings = <
				&trans  &kp LBRC    &kp AMPS   &kp ASTRK  &kp LPAR   &kp RBRC     &trans   &trans    &trans    &trans    &trans    &trans
				&trans  &kp COLON   &kp DLLR   &kp PRCNT  &kp CARET  &kp PLUS     &trans   &trans    &trans    &trans    &trans    &trans
				&trans  &kp TILDE   &kp EXCL   &kp AT     &kp HASH   &kp PIPE     &trans   &trans    &trans    &trans    &trans    &trans
				                               &kp LPAR   &kp RPAR   &kp UNDER    &trans   &trans    &trans
			>;
		};
		function {
				// ------------------------------------------------------------------------------
				// | F12 | F7 | F8   | F9    | Prnt Scrn ||  |       |       |      |      |
				// | F11 | F4 | F5   | F6    | Scrl Lck  ||  |       |       |      |      |
				// | F10 | F1 | F2   | F3    | Pause     ||  |       |       |      |      |
				// |     |    | Menu | Space | Tab       ||  |       |       |      |      |
			label = "Function";
			bindings = <
				&trans    &kp F12    &kp F7    &kp F8       &kp F9     &kp PSCRN          &trans   &trans    &trans    &trans    &trans    &trans
				&trans    &kp F11    &kp F4    &kp F5       &kp F6     &kp SLCK           &trans   &trans    &trans    &trans    &trans    &trans
				&trans    &kp F10    &kp F1    &kp F2       &kp F3     &kp PAUSE_BREAK    &trans   &trans    &trans    &trans    &trans    &trans
				                               &kp K_CMENU  &kp SPACE  &kp TAB            &trans   &trans    &trans
			>;
		};
		RMOD {
				// ------------------------------------------------------------------------------
				// |       |      |       |       |   ||  |       |       |      |      |
				// |       |      |       |       |   ||  | LSHFT | LCTRL | LALT | LGUI |
				// |       |      |       |       |   ||  |       |       |      |      |
				// |       |      |       |       |   ||  |       |       |      |      |
			label = "Right Mod";
			bindings = <
				&trans   &trans    &trans    &trans    &trans    &trans      &trans   &trans     &trans     &trans    &trans     &trans
				&trans   &trans    &trans    &trans    &trans    &trans      &trans   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI   &trans
				&trans   &trans    &trans    &trans    &trans    &trans      &trans   &trans     &trans     &trans    &trans     &trans
				                             &trans    &trans    &trans      &trans   &trans     &trans
			>;
		};
		LMOD {
				// ------------------------------------------------------------------------------
				// |       |      |       |       |   ||  |       |       |      |      |
				// | LGUI  | LALT | LCTRL | LSHFT |   ||  |       |       |      |      |
				// |       |      |       |       |   ||  |       |       |      |      |
				// |       |      |       |       |   ||  |       |       |      |      |
			label = "Left Mod";
			bindings = <
				&trans   &trans    &trans    &trans    &trans     &trans      &trans   &trans     &trans     &trans    &trans     &trans
				&trans   &kp LGUI  &kp LALT  &kp LCTRL &kp LSHFT  &trans      &trans   &trans     &trans     &trans    &trans     &trans
				&trans   &trans    &trans    &trans    &trans     &trans      &trans   &trans     &trans     &trans    &trans     &trans
				                             &trans    &trans     &trans      &trans   &trans     &trans
			>;
		};
	};
}; 
